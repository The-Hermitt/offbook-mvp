name: OffBook Smoke (Render)

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  contents: read
  pull-requests: write

env:
  BASE: ${{ secrets.OFFBOOK_BASE_URL }}
  SECRET: ${{ secrets.OFFBOOK_SHARED_SECRET }}

jobs:
  smoke:
    name: Smoke test API + UI contract
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Show PR info
        run: |
          echo "PR #${{ github.event.pull_request.number }} by ${{ github.actor }}"
          echo "BASE=$BASE"

      - name: Quick health checks
        run: |
          curl -fsSL "$BASE/health" | tee /tmp/health.json
          curl -fsSL "$BASE/health/tts" | tee /tmp/tts.json

      - name: Safe smoke test script
        run: |
          chmod +x scripts/smoke-debug.sh || true
          BASE="$BASE" SECRET="$SECRET" scripts/smoke-debug.sh || exit 1

      - name: UI contract (tabs must exist)
        run: |
          URL="$BASE/app-tabs.html"
          [ -n "$SECRET" ] && URL="$URL?secret=$SECRET"
          PAGE=$(curl -fsS "$URL")
          # Minimal check: these 6 labels must be present
          for T in Import Assign Rehearse Record Gallery Settings; do
            echo "$PAGE" | grep -qi "$T" || { echo "Missing tab: $T"; exit 1; }
          done
          echo "Tabs OK"

  gate:
    name: Gate PR (UI change detection)
    runs-on: ubuntu-latest
    outputs:
      ui_changed: ${{ steps.diff.outputs.ui_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: diff
        name: Detect UI changes
        run: |
          UI_CHANGED="false"
          git fetch origin ${{ github.base_ref }} --depth=1
          git diff --name-only origin/${{ github.base_ref }}...HEAD | tee /tmp/diff.txt
          if grep -E '^public/app-tabs\.html$' /tmp/diff.txt >/dev/null; then
            UI_CHANGED="true"
          fi
          echo "ui_changed=$UI_CHANGED" >> "$GITHUB_OUTPUT"

      - name: Label if UI changed
        if: steps.diff.outputs.ui_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo, number} = context.issue;
            await github.rest.issues.addLabels({ owner, repo, issue_number: number, labels: ["ui-approval-required"] });
            core.notice("UI changed. Label added: ui-approval-required");

  automerge:
    name: Auto-merge 'ready' PRs (no UI changes)
    needs: [smoke, gate]
    if: needs.gate.outputs.ui_changed == 'false'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Merge when labeled 'ready' and checks are green
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const {owner, repo, number} = context.issue;

            // Only merge if label 'ready' is present
            const labels = (pr.labels || []).map(l => l.name);
            if (!labels.includes('ready')) {
              core.notice("Not labeled 'ready' â€” skipping automerge.");
              return;
            }

            // Merge (squash) if all required checks succeeded
            await github.rest.pulls.merge({
              owner, repo, pull_number: number, merge_method: "squash"
            });
            core.notice("Merged via automerge job.");
